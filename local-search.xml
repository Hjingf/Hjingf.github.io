<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>说明</title>
    <link href="/2023/05/24/%E8%AF%B4%E6%98%8E/"/>
    <url>/2023/05/24/%E8%AF%B4%E6%98%8E/</url>
    
    <content type="html"><![CDATA[<h2 id="1-说明"><a href="#1-说明" class="headerlink" title="1. 说明"></a>1. 说明</h2><p>终于弄好了，就先这样吧，域名什么的也先不搞了，之后可能也会换一种方式建站，这里如果没有特殊情况的话会也会一直更新的，主要就是之前学习的总结，还有在工作中学习到的知识，也会更新一些生活的情况，当然，主要还是知识的总结。非常可惜现在才建立自己的博客，之后会把自己学习到的、用到的知识总结逐步更新上来。</p><p><img src="/images/%E8%AF%B4%E6%98%8E/backgroud3.jpg" alt="图片" title="风景"></p>]]></content>
    
    
    <categories>
      
      <category>总结</category>
      
    </categories>
    
    
    <tags>
      
      <tag>总结</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo+github搭建个人博客博客</title>
    <link href="/2023/05/16/First-post/"/>
    <url>/2023/05/16/First-post/</url>
    
    <content type="html"><![CDATA[<p>其实从在大学的时候我就想做自己的博客网站了，但是当时以为只有自己买一个服务器才能搭建网站，所有当时一直没有下定决心。工作之后了解到可以通过Hexo+githubpages的方式搭建博客，所以我就果断用这种方式搭建了。以下是我记录的搭建的过程。</p><h2 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1.准备工作"></a>1.准备工作</h2><h3 id="1-1-需要下载的工具"><a href="#1-1-需要下载的工具" class="headerlink" title="1.1 需要下载的工具"></a>1.1 需要下载的工具</h3><p>​    Node.js、npm、git<br>​    我是先在linux下先试验了一下，然后再在windows下部署的，所以以下的准备工作windows和linux都有包含</p><h4 id="1-1-1windows"><a href="#1-1-1windows" class="headerlink" title="1.1.1windows"></a>1.1.1windows</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">Node.js: https:<span class="hljs-regexp">//</span>link.zhihu.com<span class="hljs-regexp">/?target=https%3A/</span><span class="hljs-regexp">/nodejs.org/</span>zh-cn<br>Git: https:<span class="hljs-regexp">//</span>link.zhihu.com<span class="hljs-regexp">/?target=https%3A/</span><span class="hljs-regexp">/git-scm.com/</span>downloads<br></code></pre></td></tr></table></figure><p>直接下载安装就可以了</p><p>查看版本（是否安装成功）</p><p> node -v<br> npm -v<br> git –version</p><p><img src="/images/First-post/select_version.png" alt="图片" title="查询版本"></p><h4 id="1-1-2linux-ubuntu"><a href="#1-1-2linux-ubuntu" class="headerlink" title="1.1.2linux(ubuntu)"></a>1.1.2linux(ubuntu)</h4><p>​linux下下载就比较方便了，使用命令下载就可以了</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">Git:</span><br>sudo apt-get install git-core<br><span class="hljs-symbol">curl:</span><br>    sudo snap install curl<br><span class="hljs-symbol">nodejs:</span><br>    curl -fsSL https:<span class="hljs-comment">//deb.nodesource.com/setup_current.x | sudo -E bash -</span><br>    sudo apt-get install -y nodejs<br></code></pre></td></tr></table></figure><h3 id="1-2-git账号"><a href="#1-2-git账号" class="headerlink" title="1.2 git账号"></a>1.2 git账号</h3><p>git地址：<a href="https://github.com/">Github</a></p><p>右上角有个sign up，点进去注册，记住用户名</p><p>打开gitbash，设置用户名和邮箱</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.name</span> <span class="hljs-string">&quot;GitHub 用户名&quot;</span><br>git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.email</span> <span class="hljs-string">&quot;GitHub 邮箱&quot;</span><br></code></pre></td></tr></table></figure><p>创建SSH密钥</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">ssh-keygen -<span class="hljs-built_in">t</span> rsa -C <span class="hljs-string">&quot;GitHub 邮箱&quot;</span><br></code></pre></td></tr></table></figure><p>所生成文件在[C:\Users\用户名.ssh] 目录，查看id_rsa.pub公钥内容并复制。</p><p>添加公钥到github： Setting-&gt; SSH and GPG keys-&gt; New SSH key</p><p><img src="/images/First-post/gitssh1.png" alt="图片"></p><p><img src="/images/First-post/gitssh2.png" alt="图片" title="新建私钥"></p><p>验证链接：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ssh</span> -T git<span class="hljs-variable">@github</span>.com<br></code></pre></td></tr></table></figure><p>之后创建一个仓库，格式为【你的用户名 + github.io】。</p><p><img src="/images/First-post/newRepository.png" alt="图片" title="新建仓库"></p><p>之后浏览器访问 https:&#x2F;&#x2F;&lt;GitHub 用户名&gt;.github.io，如果能正常访问，表示Github Pages搭建成功。</p><h3 id="1-3-安装Hexo"><a href="#1-3-安装Hexo" class="headerlink" title="1.3 安装Hexo"></a>1.3 安装Hexo</h3><p>先修改代理</p><p>查看代理</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">npm<span class="hljs-built_in"> config </span><span class="hljs-built_in">get</span> registry <br></code></pre></td></tr></table></figure><p>修改代理</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">npm config set registry https:<span class="hljs-comment">//registry.npm.taobao.org </span><br></code></pre></td></tr></table></figure><p>安装Hexo（Hexo官方文档：<a href="https://hexo.io/zh-cn/">Hexo</a>）</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">npm install -g hexo-cli<br><span class="hljs-regexp">//</span>查看版本<br>hexo -v<br></code></pre></td></tr></table></figure><p>创建一个文件夹作为你的博客，这里就创建一个myBlog的目录啦</p><p>打开cmd，进入你刚刚创建的目录，cd 你的目录</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">hexo init <span class="hljs-regexp">//</span>初始化<br>npm install <span class="hljs-regexp">//</span>安装组件<br></code></pre></td></tr></table></figure><p>之后生成页面和启动预览</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">hexo g   <span class="hljs-regexp">//</span>生成页面<br>hexo s   <span class="hljs-regexp">//</span>启动预览<br></code></pre></td></tr></table></figure><p>访问 <a href="http://localhost:4000，出现">http://localhost:4000，出现</a> Hexo 默认页面，代表成功。</p><h3 id="1-4-配置主题"><a href="#1-4-配置主题" class="headerlink" title="1.4 配置主题"></a>1.4 配置主题</h3><p>这里主要使用的主题是Fluid主题，也可以寻找自己喜欢的主题(<a href="https://hexo.io/themes/">Themes | Hexo</a>)</p><h4 id="1-4-1-安装主题"><a href="#1-4-1-安装主题" class="headerlink" title="1.4.1 安装主题"></a>1.4.1 安装主题</h4><p>官方提供两种安装方式，这里使用的是npm方式</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install <span class="hljs-comment">--save hexo-theme-fluid</span><br></code></pre></td></tr></table></figure><p>在博客根路径下创建 <code>_config.fluid.yml</code> 文件，并将主题的 <code>./node_modules/hexo-theme-fluid/_config.yml</code> 文件内容复制过去。</p><h4 id="1-4-2-指定主题"><a href="#1-4-2-指定主题" class="headerlink" title="1.4.2 指定主题"></a>1.4.2 指定主题</h4><p>修改 Hexo 博客根目录下的 <code>_config.yml</code>:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">theme: fluid  <span class="hljs-regexp">//</span>指定主题<br>language: zh-CN  <span class="hljs-regexp">//</span>指定语言，会影响主题显示的语言，按需修改<br></code></pre></td></tr></table></figure><h4 id="1-4-3-创建关于页"><a href="#1-4-3-创建关于页" class="headerlink" title="1.4.3 创建关于页"></a>1.4.3 创建关于页</h4><p>第一次使用主题，需要自己创建关于也</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> about<br></code></pre></td></tr></table></figure><p>创建成功后修改 <code>/source/about/index.md</code>，添加 layout 属性。修改如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">标题</span> <br><span class="hljs-attr">layout:</span> <span class="hljs-string">about</span> <br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><p>注：<code>layout: about</code> 必须存在</p><p>更新主题</p><p>通过 npm 安装主题的情况，需要更新主题：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">npm <span class="hljs-keyword">update</span> <span class="hljs-comment">--save hexo-theme-fluid</span><br></code></pre></td></tr></table></figure><p>1.4.4 本地启动</p><p>执行以下命令</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo clean </span><br><span class="hljs-attribute">hexo g </span><br><span class="hljs-attribute">hexo s</span><br></code></pre></td></tr></table></figure><p>再次通过浏览器访问 <a href="https://www.oschina.net/action/GoToLink?url=http://localhost:4000">http://localhost:4000</a> , 便可以看到页面变成设置的主题页面了。</p><h2 id="1-5-创建文章"><a href="#1-5-创建文章" class="headerlink" title="1.5 创建文章"></a>1.5 创建文章</h2><p>修改 <code>_config.yml</code> 文件。这项配置是为了在生成文章的同时，生成一个同名的资源目录用于存放图片等资源文件。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>创建文件名为 myblog-build-first文章。</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">hexo <span class="hljs-built_in">new</span> <span class="hljs-built_in">post</span> myblog-build-<span class="hljs-keyword">first</span><br></code></pre></td></tr></table></figure><p>如上命令执行成功后，在 <code>source/_posts/</code> 目录下生成了一个 Markdown 文件和一个同名的资源目录。</p><p>然后你就可以进入到你刚刚创建的文件里修改你的文章信息了</p><h2 id="1-6-发布到GitHub-Pages"><a href="#1-6-发布到GitHub-Pages" class="headerlink" title="1.6 发布到GitHub Pages"></a>1.6 发布到GitHub Pages</h2><p>1.6.1 安装<code>hexo-deployer-git</code></p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>1.6.2 修改<code>_config.yml</code></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">deploy:  <br>type: git  <br>repo: &lt;repository url&gt; <span class="hljs-regexp">//</span> https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/&lt;GitHub用户名&gt;/</span>&lt;GitHub用户名&gt;.github.io.git  <br>branch: [branch]  <br>token: [token]<br></code></pre></td></tr></table></figure><p>1.6.3 生成文件并推送至远程GitHub仓库</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo clean </span><br><span class="hljs-attribute">hexo deploy</span> <br></code></pre></td></tr></table></figure><p>登入 Github，在库设置（Repository Settings）中将默认分支设置为 <code>_config.yml</code> 配置中的分支名称。只需稍等片刻，个人博客站点就会显示在 Github Pages 中。</p><h2 id="1-7-资料"><a href="#1-7-资料" class="headerlink" title="1.7 资料"></a>1.7 资料</h2><p>Hexo文档：<a href="https://hexo.io/zh-cn/docs/">文档 | Hexo</a></p><p>Hexo_Fluid用户手册：<a href="https://fluid-dev.github.io/hexo-fluid-docs/">Hexo Fluid 用户手册 (fluid-dev.github.io)</a></p>]]></content>
    
    
    <categories>
      
      <category>总结</category>
      
    </categories>
    
    
    <tags>
      
      <tag>github</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/05/16/hello-world/"/>
    <url>/2023/05/16/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
